---------------------12:57 https://tkdocs.com/tutorial/firstexample.html ------------------------------------------------
Step-by-Step Walkthrough
	- The "columnconfigure"/"rowconfigure" bits just tell Tk that if the main window is resized, the frame should expand to take up the extra space

Def calculate(*args):     
	try:         
		value = float(feet.get())         
		meters.set((0.3048 * value * 10000.0 + 0.5)/10000.0)     
	except ValueError:         
	pass
	(Column=3, row=2, sticky=W)

Ttk.Label(mainframe, text="feet").grid(column=3, row=1, sticky=W) ttk.Label(mainframe, text="is equivalent to").grid(column=1, row=2, sticky=E) ttk.Label(mainframe, text="meters").grid(column=3, row=2, sticky=W) for child in mainframe.winfo_children(): child.grid_configure(padx=5, pady=5) feet_entry.focus() root.bind('<Return>', calculate)
R child in mainframe.winfo_children(): child.grid_configure(padx=5, pady=5) feet_entry.focus()

---------------------20:25 https://tkdocs.com/tutorial/concepts.html ------------------------------------------------
Configuration Options
	- The available options depend upon the widget class, of course
		• Both a button and a label have a "text" option to adjust the text the widget displays
		• A scrollbar would not have a "text" option since it's not needed
		• Button has a "command" option telling it what to do when pushed
		• Button.configure()
Geometry Management
	- All the Java programmers who have suffered through "GridBagLayout" please raise their hands
How it Works
	- Master and slave widgets
Event Handling
	- Will figure out what widget the event applies to
		• Did the user click on this button? if a key was pressed, which textbox had the focus
Command Callbacks
Event Bindings
Virtual Events
	- Many widgets generate higher level events called virtual events
Multiple Bindings
	- Events can be set up for
		• The individual widget itself
		• All widgets of a certain class (e.g. buttons
		• The toplevel window containing the widget
		• All widgets in the application
	- Default behavior of each widget class in Tk is itself defined with script-level event bindings, and so can be introspected and modified to alter the behavior of all widgets of a certain class
	- You can even completely modify the handling of this multiple sequence of events for each widget
	- "bindtags" command reference

